inputSet:
  name: "${name}"
  identifier: "${identifier}"
  orgIdentifier: "${org_id}"
  projectIdentifier: "${project_id}"
  pipeline:
    identifier: "${pipeline_id}"
    template:
      templateInputs:
        stages:
          - stage:
              identifier: Terraform
              type: Deployment
              spec:
                service:                
                  serviceRef: ${custom_service_id}
                execution:
                  steps:
                    - step:
                        identifier: Terraform_Plan
                        type: TerraformPlan
                        spec:
                          configuration:
                            varFiles:
                              - varFile:
                                  identifier: tfvars
                                  type: Remote
                                  spec:
                                    store:
                                      type: Github
                                      spec:
                                        paths:
                                          %{ if "${TERRAFORM_REPO}" == "harness-bootstrap-tf" }
                                          - "harness-provision/tfvars/<+stage.variables.TERRAFORM_WORKSPACE>/account.tfvars"
                                          - "harness-provision/tfvars/<+stage.variables.TERRAFORM_WORKSPACE>/projects.tfvars"
                                          - "harness-provision/tfvars/<+stage.variables.TERRAFORM_WORKSPACE>/connectors.tfvars"
                                          - "harness-provision/tfvars/<+stage.variables.TERRAFORM_WORKSPACE>/templates.tfvars"
                                          %{ endif }
                                          %{ if "${TERRAFORM_REPO}" == "harness-organization-tf" }
                                          - "harness-provision/tfvars/<+stage.variables.TERRAFORM_WORKSPACE>/account.tfvars"
                                          - "harness-provision/tfvars/<+stage.variables.TERRAFORM_WORKSPACE>/connectors.tfvars"
                                          - "harness-provision/tfvars/<+stage.variables.TERRAFORM_WORKSPACE>/environments.tfvars"
                                          - "harness-provision/tfvars/<+stage.variables.TERRAFORM_WORKSPACE>/services.tfvars"
                                          - "harness-provision/tfvars/<+stage.variables.TERRAFORM_WORKSPACE>/pipelines.tfvars"
                                          - "harness-provision/tfvars/<+stage.variables.TERRAFORM_WORKSPACE>/inputsets.tfvars"
                                          - "harness-provision/tfvars/<+stage.variables.TERRAFORM_WORKSPACE>/triggers.tfvars"
                                          - "harness-provision/tfvars/<+stage.variables.TERRAFORM_WORKSPACE>/variables.tfvars"
                                          %{ endif }
                environment:                  
                  environmentRef: harness_${suffix}                 
                  infrastructureDefinitions:                    
                    - identifier: harness_harness_${suffix}             
              variables:
                - name: GCS_BUCKET
                  type: String
                  value: ${GCS_BUCKET}
                - name: GCS_PREFIX
                  type: String
                  value: ${GCS_PREFIX}
                - name: TERRAFORM_WORKSPACE
                  type: String
                  value: ${TERRAFORM_WORKSPACE}
                - name: TERRAFORM_ACTION
                  type: String
                  value: "apply"
                - name: TERRAFORM_FOLDER
                  type: String
                  value: ${TERRAFORM_FOLDER}
        variables:
          - name: TERRAFORM_REPO
            type: String
            value: ${TERRAFORM_REPO}
        delegateselectors:        
          - ${DELEGATE_SELECTOR}