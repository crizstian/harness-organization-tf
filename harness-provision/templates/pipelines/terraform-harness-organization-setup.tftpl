pipeline:
  name: ${name}
  identifier: ${identifier}
  orgIdentifier: ${org_id}
  projectIdentifier: ${project_id}
  tags: {}
  template:
    templateRef: ${pipeline.template_id}
    versionLabel: "${pipeline.template_version}"
    templateInputs:
      stages:
        - stage:
            identifier: Terraform
            type: Deployment
            spec:
              service:
                serviceRef: <+input>
                serviceInputs: <+input>
              environment:
                environmentRef: <+input>
                environmentInputs: <+input>
                serviceOverrideInputs: <+input>
                infrastructureDefinitions: <+input>
            variables:
              - name: GCS_BUCKET
                type: String
                value: <+input>.default(${GCS_BUCKET})
              - name: GCS_PREFIX
                type: String
                value: <+input>.default(${GCS_PREFIX})
              - name: HARNESS_ACCOUNT_ID
                type: String
                value: <+input>.default(${HARNESS_ACCOUNT_ID})
              - name: HARNESS_PLATFORM_API_KEY
                type: Secret
                value: <+input>.default(${HARNESS_PLATFORM_API_KEY})
              - name: GOOGLE_BACKEND_CREDENTIALS
                type: Secret
                value: <+input>.default(${GOOGLE_BACKEND_CREDENTIALS})
              - name: TERRAFORM_WORKSPACE
                type: String
                value: <+input>
              - name: TERRAFORM_ACTION
                type: String
                value: <+input>.allowedValues(apply,destroy)
              - name: TERRAFORM_REPO
                type: String
                value: <+input>.default(${TERRAFORM_REPO})
              - name: TERRAFORM_FOLDER
                type: String
                value: <+input>.default(${TERRAFORM_FOLDER})
              - name: TERRAFORM_BRANCH
                type: String
                value: <+input>.default(${TERRAFORM_BRANCH})